source('J:/Proyecto-shiny-Eafit/Shiny-Eafit/ui.R')
source('J:/Proyecto-shiny-Eafit/Shiny-Eafit/server.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
?fileInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
require(tseries)
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
dataT <- t(dataT)
plot(dataT,type="l")
require(tseries)
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
setwd("C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/banco")
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
dataT <- t(dataT)
plot(dataT,type="l")
acf(dataT)
pacf(dataT)
dataTlog <- log(dataT + 1)
plot(dataTlog,type="o",xlab="Tiempo",ylab="")
acf(dataTlog)
pacf(dataTlog)
modelo <- arma(dataTlog,c(5,1))
summary(modelo)
plot(modelo)
plot(dataTlog,type="o",xlab="Tiempo",ylab="")
lines(modelo$fitted.values,type="l",col="red")
predict(modelo)
modelo
summary(modelo)
?arima
modelo <- arima(dataTlog,c(5,1,1))
summary(modelo)
plot(modelo)
plot(dataTlog,type="o",xlab="Tiempo",ylab="")
lines(modelo$fitted.values,type="l",col="red")
modelo
modelo$series
modelo$var.coef
modelo$model
lines(modelo$fitted.values,type="l",col="red")
predict(modelo,5)
?predict
prediccion <- predict(modelo,5)
prediccion$pred
plot(dataTlog,type="o",xlab="Tiempo",ylab="")
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(modelo$fitted.values,type="l",col="red")
modelo$fitted.values
lines(prediccion$pred)
lines(prediccion$pred+prediccion$se)
lines(prediccion$pred-prediccion$se)
modelo
plot(modelo)
modelo <- arima(dataTlog,c(5,0,2))
summary(modelo)
plot(modelo)
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(modelo$fitted.values,type="l",col="red")
prediccion <- predict(modelo,5)
lines(prediccion$pred)
lines(prediccion$pred-prediccion$se)
acf(dataTlog)
pacf(dataTlog)
acf(dataTlog)
pacf(dataTlog)
modelo <- arima(dataTlog,c(7,0,5))
summary(modelo)
modelo <- arima(dataTlog,c(7,0,5))
summary(modelo)
plot(modelo)
prediccion <- predict(modelo,5)
prediccion
lines(prediccion$pred)
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(prediccion$pred)
lines(prediccion$pred-prediccion$se)
lines(prediccion$pred+prediccion$se)
prediccion <- predict(modelo,10)
lines(prediccion$pred)
prediccion <- predict(modelo,100)
lines(prediccion$pred)
lines(prediccion$pred+prediccion$se)
lines(prediccion$pred-prediccion$se)
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,250))
prediccion <- predict(modelo,100)
lines(prediccion$pred)
lines(prediccion$pred-prediccion$se)
lines(prediccion$pred+prediccion$se)
modelo <- arima(dataTlog,c(7,1,5))
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,250))
lines(modelo$fitted.values,type="l",col="red")
prediccion <- predict(modelo,100)
lines(prediccion$pred)
lines(prediccion$pred+prediccion$se)
#-------------------------------------------
lines(prediccion$pred-prediccion$se)
modelo
class(modelo)
install.packages("forecast")
fitted(modelo)
modelo <- arima(dataTlog,c(7,1,5))
fitted(modelo)
modelo <- Arima(dataTlog,c(7,1,5))
?Arima
require(forecast)
modelo <- Arima(dataTlog,c(7,1,5))
fitted(modelo)
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,250))
lines(fitted(modelo),col="red")
acf(dataTlog)
pacf(dataTlog)
modelo <- Arima(dataTlog,c(7,0,5))
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,250))
lines(fitted(modelo),col="red")
modelo <- Arima(dataTlog,c(7,1,5))
modelo <- Arima(dataTlog,c(7,1,5))
lines(fitted(modelo),col="blue")
modelo <- Arima(dataTlog,c(7,0,5))
lines(fitted(modelo),col="red")
modelo <- Arima(dataTlog,c(7,0,5))
summary(modelo)
plot(modelo)
plot(dataTlog,type="o",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(fitted(modelo),col="red")
prediccion <- predict(modelo,5)
lines(prediccion$pred)
lines(prediccion$pred-prediccion$se)
lines(prediccion$pred+prediccion$se)
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(fitted(modelo),col="red")
prediccion <- predict(modelo,5)
lines(prediccion$pred)
lines(prediccion$pred+prediccion$se)
lines(prediccion$pred-prediccion$se)
lines(prediccion$pred,col="blue")
lines(prediccion$pred-prediccion$se,col="blue")
lines(prediccion$pred+prediccion$se,col="blue")
lines(prediccion$pred,type="o")
lines(prediccion$pred-prediccion$se,col="blue",type="o")
lines(prediccion$pred+prediccion$se,col="blue",type="o")
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
lines(fitted(modelo),col="red")
prediccion <- predict(modelo,5)
lines(prediccion$pred,type="o")
lines(prediccion$pred-prediccion$se,col="blue",type="o")
lines(prediccion$pred+prediccion$se,col="blue",type="o")
prediccion <- predict(modelo,10)
lines(prediccion$pred,type="o")
lines(prediccion$pred-prediccion$se,col="blue",type="o")
lines(prediccion$pred+prediccion$se,col="blue",type="o")
plot(dataTlog,type="o",xlab="Tiempo",ylab="")
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
dataT <- t(dataT)
dataTlog <- log(dataT + 1)
modelo <- Arima(dataTlog,c(7,0,5))
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
lines(fitted(modelo),col="red")
prediccion <- predict(modelo,10)
lines(prediccion$pred,type="o")
lines(prediccion$pred-prediccion$se,col="blue",type="o")
lines(prediccion$pred+prediccion$se,col="blue",type="o")
impT
source('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit/Reliability.R')
impT
impT
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
rel.plot
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
impT
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
impT2
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
dataT <- t(dataT)
plot(dataT)
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
dataT <- t(dataT)
dataTlog <- log(dataT + 1)
modelo <- Arima(dataTlog,c(7,0,5))
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(exp(fitted(modelo)),col="red")
modelo <- Arima(dataTlog,c(7,1,5))
lines(exp(fitted(modelo)),col="red")
modelo <- Arima(dataTlog,c(7,1,7))
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(exp(fitted(modelo)),col="red")
acf(dataT)
pacf(dataT)
acf(dataTlog)
pacf(dataTlog)
modelo <- Arima(dataTlog,c(10,0,11))
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
lines(fitted(modelo),col="red")
modelo <- Arima(dataTlog,c(10,0,5))
#-------------------------------------------
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
lines(fitted(modelo),col="red")
modelo <- Arima(dataTlog,c(7,0,5))
#-------------------------------------------
plot(dataTlog,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim = c(0,10))
lines(fitted(modelo),col="red")
modelo <- Arima(dataTlog,c(7,1,7))
#-------------------------------------------
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(exp(fitted(modelo)),col="red")
modelo <- Arima(dataTlog,c(7,0,7))
#-------------------------------------------
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(exp(fitted(modelo)),col="red")
modelo <- Arima(dataTlog,c(7,0,7))
#-------------------------------------------
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150))
lines(exp(fitted(modelo)),col="red")
prediccion <- predict(modelo,10)
lines(exp(prediccion$pred),type="o")
lines(exp(prediccion$pred-prediccion$se),col="blue",type="o")
lines(exp(prediccion$pred+prediccion$se),col="blue",type="o")
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim=c(0,7000))
lines(exp(fitted(modelo)),col="red")
prediccion <- predict(modelo,10)
lines(exp(prediccion$pred),type="o")
lines(exp(prediccion$pred-prediccion$se),col="blue",type="o")
lines(exp(prediccion$pred+prediccion$se),col="blue",type="o")
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim=c(0,9000))
lines(exp(fitted(modelo)),col="red")
prediccion <- predict(modelo,10)
lines(exp(prediccion$pred),type="o")
lines(exp(prediccion$pred-prediccion$se),col="blue",type="o")
lines(exp(prediccion$pred+prediccion$se),col="blue",type="o")
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim=c(0,20000))
lines(exp(fitted(modelo)),col="red")
prediccion <- predict(modelo,10)
lines(exp(prediccion$pred),type="o")
lines(exp(prediccion$pred-prediccion$se),col="blue",type="o")
lines(exp(prediccion$pred+prediccion$se),col="blue",type="o")
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim=c(0,17000))
lines(exp(fitted(modelo)),col="red")
prediccion <- predict(modelo,10)
lines(exp(prediccion$pred),type="o")
lines(exp(prediccion$pred-prediccion$se),col="blue",type="o")
lines(exp(prediccion$pred+prediccion$se),col="blue",type="o")
plot(dataT,type="l",xlab="Tiempo",ylab="",xlim = c(0,150),ylim=c(0,16000))
lines(exp(fitted(modelo)),col="red")
prediccion <- predict(modelo,10)
lines(exp(prediccion$pred),type="o")
lines(exp(prediccion$pred-prediccion$se),col="blue",type="o")
lines(exp(prediccion$pred+prediccion$se),col="blue",type="o")
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
dataT <- read.csv("CS (2).csv", header=FALSE, sep=",")
dataT <- t(dataT)
length(dataT)
length(dataT)
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
library(dygraphs)
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
lungDeaths
hw <- HoltWinters(ldeaths)
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
all <- cbind(ldeaths, p)
all
hw <- HoltWinters(ldeaths)
hw
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
p
ldeaths
p
ldeaths
all <- cbind(ldeaths, p)
all
ldeaths
all
dataT
dPrediccion <- data.frame(LowLimit = exp(prediccion$pred-prediccion$se),
Data = exp(prediccion$pred),
HighLimit = exp(prediccion$pred+prediccion$se))
dPrediccion
cbind(dataT,dPrediccion)
dataT
str(dataT)
length(dataT)
rep(NA,136)
cbind(rep(NA,136),dPrediccion[,1])
rep(NA,136)
dPrediccion[,1]
rbind(rep(NA,136),dPrediccion[,1])
matrix(rep(NA,136*3),ncol=3)
dataT2 <- rbind(matrix(rep(NA,136*3),ncol=3),dPrediccion)
dPrediccion
matrix(rep(NA,136*3),ncol=3)
dataT2 <- rbind(matrix(rep(NA,136*3),ncol=3),dPrediccion)
dataT2 <- rbind(matrix(data.frame(rep(NA,136*3),ncol=3)),dPrediccion)
dataT2 <- rbind(data.frame(matrix(rep(NA,136*3),ncol=3)),dPrediccion)
data.frame(matrix(rep(NA,136*3),ncol=3))
names(dPrediccion)
names(data.frame(matrix(rep(NA,136*3),ncol=3))) <- names(dPrediccion)
names(data.frame(matrix(rep(NA,136*3),ncol=3)))
names(data.frame(matrix(rep(NA,136*3),ncol=3))) <- names(dPrediccion)
colnames(matrix(rep(NA,136*3),ncol=3)) <- names(dPrediccion)
colnames(matrix(rep(NA,136*3),ncol=3))
names(dPrediccion)
colnames(matrix(rep(NA,136*3),ncol=3)) <- names(dPrediccion)
nas <- matrix(rep(NA,136*3),ncol=3)
names(nas)
colnames(nas)
colnames(nas)
names(dPrediccion)
colnames(nas) <- names(dPrediccion)
colnames(nas)
dataT2 <- rbind(nas,dPrediccion)
dataT2
dataT
matrix(rep(NA,length(prediccion)*1),ncol=1)
prediccion
length(prediccion)
prediccion
length(prediccion)
nrow(prediccion)
length(prediccion$pred)
nas2 <- matrix(rep(NA,length(prediccion$pred)),ncol=1)
nas2
names(dataT)
colnames(nas2) <- names(dataT)
nas2 <- matrix(rep(NA,length(prediccion$pred)),ncol=1)
colnames(nas2) <- names(dataT)
dataT3 <- rbind(dataT,nas2)
dataT3
dataFinal <- cbind(dataT2,dataT3)
dataFinal
dataFinal <- cbind(dataT3,dataT2)
dataT3
dataT2
dataFinal <- cbind(dataT3,dataT2)
dataFinal
head(dataFinal)
dataFinal <- cbind(Historico = dataT3,dataT2)
head(dataFinal)
dygraph(dataFinal, "Deaths from Lung Disease (UK)") %>%
dySeries("ldeaths", label = "Actual") %>%
dySeries(c("p.lwr", "p.fit", "p.upr"), label = "Predicted")
dygraph(dataFinal, "Deaths from Lung Disease (UK)") %>%
dySeries("Historico", label = "Actual") %>%
dySeries(c("LowLimit", "Data", "HighLimit"), label = "Predicted")
str(dataFinal)
str(all)
dataFinal <- as.ts(dataFinal)
dygraph(dataFinal, "Deaths from Lung Disease (UK)") %>%
dySeries("Historico", label = "Actual") %>%
dySeries(c("LowLimit", "Data", "HighLimit"), label = "Predicted")
dataFinal <- cbind(Historico = dataT3,dataT2)
nas <- matrix(rep(NA,length(dataT)*3),ncol=3)
colnames(nas) <- names(dPrediccion)
dataT2 <- rbind(nas,dPrediccion)
nas2 <- matrix(rep(NA,length(prediccion$pred)),ncol=1)
colnames(nas2) <- names(dataT)
dataT3 <- rbind(dataT,nas2)
dataFinal <- cbind(Historico = dataT3,dataT2)
dataFinal
dataFinal <- cbind(Tiempo= 1:length(Historico),Historico = dataT3,dataT2)
dataFinal <- cbind(Tiempo= 1:length(dataT3),Historico = dataT3,dataT2)
dataFinal
D_all_m_graph_g<-xts(dataFinal, order.by = Tiempo)
library(xts)
D_all_m_graph_g<-xts(dataFinal, order.by = Tiempo)
dataFinal
head(dataFinal)
dataFinal
D_all_m_graph_g<-xts(dataFinal, order.by = Tiempo)
?xts
dataFinal <- cbind(Tiempo= as.Date(1:length(dataT3)),Historico = dataT3,dataT2)
dataFinal
D_all_m_graph_g<-xts(dataFinal, order.by = Tiempo)
str(dataFinal)
Tiempo= as.Date(1:length(dataT3))
dataFinal <- cbind(Historico = dataT3,dataT2)
dataFinal
D_all_m_graph_g<-xts(dataFinal, order.by = Tiempo)
dataFinal<-xts(dataFinal, order.by = Tiempo)
dygraph(dataFinal, "Deaths from Lung Disease (UK)") %>%
dySeries("Historico", label = "Actual") %>%
dySeries(c("LowLimit", "Data", "HighLimit"), label = "Predicted")
Tiempo= (1:length(dataT3))
dataFinal<-xts(dataFinal, order.by = Tiempo)
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
dataT3
as.Date(1:length(dataT3))
1:length(dataT3)
as.POSIXct(1:length(dataT3))
as.POSIXct(1:length(dataT3))
as.POSIXct(1:length(dataT3))
POSIXct(c(1:2))
as.POSIXct(c(1:2))
as.POSIXct.numeric(c(1:2))
as.POSIXct.numeric(1:2)
as.Date.numeric(1:2)
as.Date.numeric(1:20)
as.Date.numeric(1:20)+10
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
dataFinal<-xts(dataFinal, order.by = Tiempo)
Tiempo
Tiempo= as.Date(1:length(dataT3))
Tiempo
str(Tiempo)
Tiempo<- 1:length(dataT3)
dataFinal<-xts(dataFinal, order.by = Tiempo)
Tiempo= as.Date(1:length(dataT3))
Tiempo
(x = structure(rep(NA_real_, 10 ), class="Date"))
structure(1:length(dataT3),class = "Date")
(x = structure(rep(NA_real_, 10 ), class="Date"))
(x = structure(rep(NA_real_,  length(dataT)), class="Date"))
x = structure(rep(NA_real_,  length(dataT)), class="Date")
dataFinal<-xts(dataFinal, order.by = x)
x
x
dataFinal <- xts(dataFinal, order.by = x)
dataFinal
Tiempo
dataFinal <- xts(dataFinal, order.by = Tiempo)
Tiempo
dataFinal <- xts(dataFinal, order.by = Tiempo)
dataFinal
str(dataFinal)
head(dataFinal)
?dygraph
dygraph(dataFinal, "Tecnology Failtures",xlab= as.character(1:length(dataT3))) %>%
dySeries("Historico", label = "Actual") %>%
dySeries(c("LowLimit", "Data", "HighLimit"), label = "Predicted")
dygraph(dataFinal, "Tecnology Failtures",xlab= as.character(1:length(dataT3))) %>%
dySeries("Historico", label = "Actual") %>%
dySeries(c("LowLimit", "Data", "HighLimit"), label = "Predicted")
dygraph(dataFinal, "Tecnology Failtures",xlab= (1:length(dataT3))) %>%
dySeries("Historico", label = "Actual") %>%
dySeries(c("LowLimit", "Data", "HighLimit"), label = "Predicted")
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
t <- impT()
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
library(knitr)
?kable
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
kable(res,format = "html" )
dataT <- read.csv(inFile$datapath, header=FALSE, sep=",")
dataT <- t(dataT)
# plot(dataT)
dataTlog <- log(dataT + 1)
modelo <- Arima(dataTlog,c(7,0,7))
#-------------------------------------------
prediccion <- predict(modelo,input$prediccion)
res <- data.frame(LowLimit = exp(prediccion$pred-prediccion$se),
Prediction = exp(prediccion$pred),
HighLimit = exp(prediccion$pred+prediccion$se))
prediccion <- predict(modelo,5)
res <- data.frame(LowLimit = exp(prediccion$pred-prediccion$se),
Prediction = exp(prediccion$pred),
HighLimit = exp(prediccion$pred+prediccion$se))
res
kable(res,format = "html" )
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
dataT <- read.csv(inFile$datapath, header=FALSE, sep=",")
dataT <- t(dataT)
# plot(dataT)
dataTlog <- log(dataT + 1)
modelo <- Arima(dataTlog,c(7,0,7))
#-------------------------------------------
prediccion <- predict(modelo,5)
dPrediccion <- data.frame(LowLimit = exp(prediccion$pred-prediccion$se),
Prediction = exp(prediccion$pred),
UpperLimit = exp(prediccion$pred+prediccion$se))
nas <- matrix(rep(NA,length(dataT)*3),ncol=3)
colnames(nas) <- names(dPrediccion)
dataT2 <- rbind(nas,dPrediccion)
nas2 <- matrix(rep(NA,length(prediccion$pred)),ncol=1)
colnames(nas2) <- names(dataT)
dataT3 <- rbind(dataT,nas2)
dataFinal <- cbind(Historic = dataT3,dataT2)
Tiempo= as.Date(1:length(dataT3))
dataFinal<-xts(dataFinal, order.by = Tiempo)
dataFinal
head(dataFinal)
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
shiny::runApp('C:/Users/aveleze/Desktop/Papadopulus Pispis/Proyecto-shiny-Eafit/Shiny-Eafit')
